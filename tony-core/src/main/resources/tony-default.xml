<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!--
   Copyright 2018 LinkedIn Corporation. All rights reserved. Licensed under the BSD-2 Clause license.
   See LICENSE in the project root for license information.
-->
<configuration>
  <property>
    <description>Namenode URIs to get delegation tokens from.</description>
    <name>tony.other.namenodes</name>
  </property>

  <!-- Application configurations -->
  <property>
    <description>Default queue to submit to YARN.</description>
    <name>tony.yarn.queue</name>
    <value>default</value>
  </property>

  <property>
    <description>Name of your YARN application.</description>
    <name>tony.application.name</name>
    <value>TensorFlowApplication</value>
  </property>

  <property>
    <description>YARN partition which this application should run in.</description>
    <name>tony.application.node-label</name>
  </property>

  <property>
    <description>Whether this is single node training or not.</description>
    <name>tony.application.single-node</name>
    <value>false</value>
  </property>

  <property>
    <description>Whether the AM should invoke the user's python script or not.</description>
    <name>tony.application.enable-preprocess</name>
    <value>false</value>
  </property>

  <property>
    <description>Max runtime of the application before killing it, in milliseconds.</description>
    <name>tony.application.timeout</name>
    <value>0</value>
  </property>

  <property>
    <description>The machine learning framework that will be used for this job - tensorflow or pytorch.</description>
    <name>tony.application.framework</name>
    <value>tensorflow</value>
  </property>

  <property>
    <description>
      How many times the proxies in TonyClient should retry on connection failure. Note that this controls the number of
      retries from the retry policy, not the internal Hadoop IPC client, e.g. if your IPC client is configured to retry
      50 times via ipc.client.connect.max.retries and tony.application.num-rm-connect-retries is set to 1, the retry
      policy will try to connect once, but the IPC client will still try to connect 50 times.
    </description>
    <name>tony.application.num-client-rm-connect-retries</name>
    <value>3</value>
  </property>

  <!-- Task configurations -->
  <property>
    <description>JVM opts for each TaskExecutor.</description>
    <name>tony.task.executor.jvm.opts</name>
    <value>-Xmx1536m</value>
  </property>

  <property>
    <description>Frequency, in milliseconds, for which TaskExecutors should heartbeat with AM.</description>
    <name>tony.task.heartbeat-interval</name>
    <value>1000</value>
  </property>

  <property>
    <description>How many missed heartbeats before declaring a TaskExecutor dead.</description>
    <name>tony.task.max-missed-heartbeats</name>
    <value>25</value>
  </property>

  <!-- AM configurations -->
  <property>
    <description>How many times a failed AM should retry.</description>
    <name>tony.am.retry-count</name>
    <value>0</value>
  </property>

  <property>
    <description>AM memory size, requested as a string (e.g. '2g' or '2048m').</description>
    <name>tony.am.memory</name>
    <value>2g</value>
  </property>

  <property>
    <description>Number of AM vcores to use.</description>
    <name>tony.am.vcores</name>
    <value>1</value>
  </property>

  <property>
    <description>Number of AM GPUs to use. (In general, should only be applicable in single node mode.)</description>
    <name>tony.am.gpus</name>
    <value>0</value>
  </property>

  <!-- PS configurations -->
  <property>
    <description>Parameter server memory size, requested as a string (e.g. '2g' or '2048m').</description>
    <name>tony.ps.memory</name>
    <value>2g</value>
  </property>

  <property>
    <description>Number of vcores per parameter server.</description>
    <name>tony.ps.vcores</name>
    <value>1</value>
  </property>

  <property>
    <description>Number of parameter servers to request.</description>
    <name>tony.ps.instances</name>
    <value>1</value>
  </property>

  <!-- Worker configurations -->
  <property>
    <description>Timeout, in milliseconds for the user's python processes before forcibly killing them.</description>
    <name>tony.worker.timeout</name>
    <value>0</value>
  </property>

  <property>
    <description>Worker memory size, requested as a string (e.g. '2g' or '2048m').</description>
    <name>tony.worker.memory</name>
    <value>2g</value>
  </property>

  <property>
    <description>Number of vcores per worker.</description>
    <name>tony.worker.vcores</name>
    <value>1</value>
  </property>

  <property>
    <description>Number of GPUs per worker.</description>
    <name>tony.worker.gpus</name>
    <value>0</value>
  </property>

  <property>
    <description>Number of workers to request.</description>
    <name>tony.worker.instances</name>
    <value>1</value>
  </property>

  <!-- Chief configurations -->
  <property>
    <description>Job name of the training chief</description>
    <name>tony.chief.name</name>
    <value>worker</value>
  </property>

  <property>
    <description>Job index of the training chief</description>
    <name>tony.chief.index</name>
    <value>0</value>
  </property>

  <!-- Docker configurations -->
  <property>
    <description>Whether we use docker container to launch the tasks</description>
    <name>tony.application.docker.enabled</name>
    <value>false</value>
  </property>

  <!-- Local testing configurations -->
  <property>
    <description>
      Whether this application is running in a Kerberized grid. Enabling this will fetch tokens from the cluster as
      well as between the client and AM.
    </description>
    <name>tony.application.security.enabled</name>
    <value>true</value>
  </property>

  <property>
    <description>
      Path to HDFS configuration, to be passed as an environment variable to the python training scripts.
    </description>
    <name>tony.application.hdfs-conf-path</name>
  </property>

  <property>
    <description>
      Path to YARN configuration, to be passed as an environment variable to the python training scripts.
    </description>
    <name>tony.application.yarn-conf-path</name>
  </property>

</configuration>
