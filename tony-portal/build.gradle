apply plugin: "play"
apply plugin: "idea"
apply plugin: "distribution"

model {
  components {
    play {
      platform play: playVersion, scala: scalaVersion, java: '1.8'
      injectedRoutesGenerator = true

      sources {
        twirlTemplates {
          defaultImports = TwirlImports.JAVA
          setAdditionalImports(['com.linkedin.tony.models._', 'com.linkedin.tony._'])
        }
      }
    }
  }
  distributions {
    playBinary {
      contents {
        from('bin') {
          into 'bin'
        }
      }
      baseName = "${project.name}-${project.version}"
    }
  }
tasks.testPlayBinary {
    classpath.add project.files("$projectDir")
  }
}

// To avoid conflicts with Play's logback binding
configurations.all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'

dependencies {
  play project(':tony-core')
  play deps.external.play_guice
  play deps.external.play_logback
  play deps.external.scala_compiler
  play deps.hadoop.common
  play deps.hadoop.yarn_api

  playTest deps.external.assertj
  playTest deps.external.awaitility
  playTest deps.external.junit
  playTest deps.external.mockito
}

repositories {
  jcenter()
  maven {
    name "lightbend-maven-release"
    url "https://repo.lightbend.com/lightbend/maven-releases"
  }
  ivy {
    name "lightbend-ivy-release"
    url "https://repo.lightbend.com/lightbend/ivy-releases"
    layout "ivy"
  }
}

test.dependsOn('testPlayBinary')


def ivyForArchives = tasks.findByPath('ivyForArchives')
if (ivyForArchives) {
  ivyForArchives.dependsOn('dist')
}
